name: Terraform Cleanup

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  terraform-cleanup:
    runs-on: ubuntu-latest

    # set the folder that has your .tf files if not repo root
    # defaults:
    #   run:
    #     working-directory: .

    env:
      AWS_REGION: us-east-1
      TF_VERSION: "1.7.5"
      TF_VAR_demokey: demokey
      TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache
      AWS_MAX_ATTEMPTS: "3"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Ensure plugin cache dir
        run: mkdir -p "$TF_PLUGIN_CACHE_DIR"

      - name: Cache TF plugins
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: tf-plugin-${{ runner.os }}-${{ env.TF_VERSION }}
          restore-keys: tf-plugin-${{ runner.os }}-

      - name: Debug
        run: |
          pwd
          ls -la
          echo "TF_PLUGIN_CACHE_DIR=$TF_PLUGIN_CACHE_DIR"

      - name: Terraform Init
        run: terraform init -input=false -lock-timeout=5m

      - name: Terraform Plan Destroy
        run: terraform plan -destroy -input=false -lock-timeout=5m -out=tfdestroy.plan
        # add -var-file=terraform.tfvars if you rely on it:
        # run: terraform plan -destroy -input=false -lock-timeout=5m -out=tfdestroy.plan -var-file=terraform.tfvars

      - name: Terraform Apply Destroy
        run: terraform apply -input=false -auto-approve -lock-timeout=5m tfdestroy.plan
